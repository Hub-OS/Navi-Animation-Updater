{"mappings":"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","sources":["<anon>","node_modules/crypt/crypt.js","node_modules/charenc/charenc.js","node_modules/is-buffer/index.js","src/index.ts","src/boomsheets-animations.ts","node_modules/quote-unquote/index.js","src/dedup-sheet.ts","node_modules/bin-pack/index.js","node_modules/bin-pack/packer.growing.js","node_modules/md5/md5.js","src/file-loading.ts","src/update-sheet.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire8b80\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire8b80\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"12eZZ\", function(module, exports) {\n(function() {\n    var base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", crypt = {\n        // Bit-wise rotation left\n        rotl: function(n, b) {\n            return n << b | n >>> 32 - b;\n        },\n        // Bit-wise rotation right\n        rotr: function(n, b) {\n            return n << 32 - b | n >>> b;\n        },\n        // Swap big-endian to little-endian and vice versa\n        endian: function(n) {\n            // If number given, swap endian\n            if (n.constructor == Number) return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n            // Else, assume array and swap all items\n            for(var i = 0; i < n.length; i++)n[i] = crypt.endian(n[i]);\n            return n;\n        },\n        // Generate an array of any length of random bytes\n        randomBytes: function(n) {\n            for(var bytes = []; n > 0; n--)bytes.push(Math.floor(Math.random() * 256));\n            return bytes;\n        },\n        // Convert a byte array to big-endian 32-bit words\n        bytesToWords: function(bytes) {\n            for(var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)words[b >>> 5] |= bytes[i] << 24 - b % 32;\n            return words;\n        },\n        // Convert big-endian 32-bit words to a byte array\n        wordsToBytes: function(words) {\n            for(var bytes = [], b = 0; b < words.length * 32; b += 8)bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);\n            return bytes;\n        },\n        // Convert a byte array to a hex string\n        bytesToHex: function(bytes) {\n            for(var hex = [], i = 0; i < bytes.length; i++){\n                hex.push((bytes[i] >>> 4).toString(16));\n                hex.push((bytes[i] & 0xF).toString(16));\n            }\n            return hex.join(\"\");\n        },\n        // Convert a hex string to a byte array\n        hexToBytes: function(hex) {\n            for(var bytes = [], c = 0; c < hex.length; c += 2)bytes.push(parseInt(hex.substr(c, 2), 16));\n            return bytes;\n        },\n        // Convert a byte array to a base-64 string\n        bytesToBase64: function(bytes) {\n            for(var base64 = [], i = 0; i < bytes.length; i += 3){\n                var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];\n                for(var j = 0; j < 4; j++)if (i * 8 + j * 6 <= bytes.length * 8) base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));\n                else base64.push(\"=\");\n            }\n            return base64.join(\"\");\n        },\n        // Convert a base-64 string to a byte array\n        base64ToBytes: function(base64) {\n            // Remove non-base-64 characters\n            base64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\n            for(var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4){\n                if (imod4 == 0) continue;\n                bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);\n            }\n            return bytes;\n        }\n    };\n    module.exports = crypt;\n})();\n\n});\n\nparcelRegister(\"a74v9\", function(module, exports) {\nvar $75ce0cb6501c8271$var$charenc = {\n    // UTF-8 encoding\n    utf8: {\n        // Convert a string to a byte array\n        stringToBytes: function(str) {\n            return $75ce0cb6501c8271$var$charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n        },\n        // Convert a byte array to a string\n        bytesToString: function(bytes) {\n            return decodeURIComponent(escape($75ce0cb6501c8271$var$charenc.bin.bytesToString(bytes)));\n        }\n    },\n    // Binary encoding\n    bin: {\n        // Convert a string to a byte array\n        stringToBytes: function(str) {\n            for(var bytes = [], i = 0; i < str.length; i++)bytes.push(str.charCodeAt(i) & 0xFF);\n            return bytes;\n        },\n        // Convert a byte array to a string\n        bytesToString: function(bytes) {\n            for(var str = [], i = 0; i < bytes.length; i++)str.push(String.fromCharCode(bytes[i]));\n            return str.join(\"\");\n        }\n    }\n};\nmodule.exports = $75ce0cb6501c8271$var$charenc;\n\n});\n\nparcelRegister(\"7B5Ea\", function(module, exports) {\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ // The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function(obj) {\n    return obj != null && ($58805e71bbbc0b37$var$isBuffer(obj) || $58805e71bbbc0b37$var$isSlowBuffer(obj) || !!obj._isBuffer);\n};\nfunction $58805e71bbbc0b37$var$isBuffer(obj) {\n    return !!obj.constructor && typeof obj.constructor.isBuffer === \"function\" && obj.constructor.isBuffer(obj);\n}\n// For Node v0.10 support. Remove this eventually.\nfunction $58805e71bbbc0b37$var$isSlowBuffer(obj) {\n    return typeof obj.readFloatLE === \"function\" && typeof obj.slice === \"function\" && $58805e71bbbc0b37$var$isBuffer(obj.slice(0, 0));\n}\n\n});\n\nvar $cbdf17c3d09bc906$export$863d7ca51b416cee;\nvar $cbdf17c3d09bc906$export$7b3cbda67be88f5f;\nvar $cbdf17c3d09bc906$export$ee7a15c61bfdeb11;\nvar $cbdf17c3d09bc906$export$f0199846ca09d4f9;\nvar $cbdf17c3d09bc906$var$single = $cbdf17c3d09bc906$export$863d7ca51b416cee = function(s) {\n    return \"'\" + s.replace(/\\\\|'/g, function(m) {\n        return \"\\\\\" + m;\n    }) + \"'\";\n};\nvar $cbdf17c3d09bc906$var$double = $cbdf17c3d09bc906$export$7b3cbda67be88f5f = function(s) {\n    return '\"' + s.replace(/\\\\|\"/g, function(m) {\n        return \"\\\\\" + m;\n    }) + '\"';\n};\n$cbdf17c3d09bc906$export$ee7a15c61bfdeb11 = function(s) {\n    return /'/.test(s) ? $cbdf17c3d09bc906$var$double(s) : $cbdf17c3d09bc906$var$single(s);\n};\n$cbdf17c3d09bc906$export$f0199846ca09d4f9 = function(s) {\n    var quote = s[0];\n    var single = quote === \"'\";\n    return s.substring(1, s.length - 1).replace(/\\\\\\\\/g, \"\\\\\").replace(single ? /\\\\'/g : /\\\\\"/g, quote);\n};\n\n\nconst $fdfd340aa13d9aca$var$nonSpaceRegex = /\\S/g;\nconst $fdfd340aa13d9aca$var$keyEndRegex = /[\\s=]/g;\nfunction $fdfd340aa13d9aca$var$matchGRegexFrom(text, regex, index) {\n    regex.lastIndex = index;\n    return regex.exec(text);\n}\nfunction $fdfd340aa13d9aca$var$stringCharIsEscaped(text, index) {\n    let escaped = false;\n    while(index > 0){\n        index -= 1;\n        if (text[index] != \"\\\\\") break;\n        escaped = !escaped;\n    }\n    return escaped;\n}\nfunction $fdfd340aa13d9aca$var$findClosingQuote(text, index) {\n    // search for non escaped quote\n    while(true){\n        if ((index = text.indexOf('\"', index)) < 0) return -1;\n        if (!$fdfd340aa13d9aca$var$stringCharIsEscaped(text, index)) break;\n        index += 1;\n    }\n    return index;\n}\nfunction $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber) {\n    const attributes = {};\n    let index = line.indexOf(\" \");\n    if (index < 0) // no attributes\n    return attributes;\n    let match;\n    while(match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, index)){\n        index = match.index;\n        // find key end\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$keyEndRegex, index);\n        if (!match) throw new Error(`Unexpected \"${line.slice(index)}\" on line ${lineNumber}`);\n        const key = line.slice(index, match.index);\n        // find \"=\"\n        const eqIndex = line.indexOf(\"=\", match.index);\n        if (eqIndex < 0) throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n        // find value start\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, eqIndex + 1);\n        if (!match) throw new Error(`Attribute is missing value on line ${lineNumber}`);\n        // find value end\n        let valueStart = match.index;\n        let value = \"\";\n        if (line[valueStart] == '\"') {\n            // quoted value\n            let valueEnd = $fdfd340aa13d9aca$var$findClosingQuote(line, valueStart + 1);\n            if (valueEnd < 0) throw new Error(`String missing closing quote on line ${lineNumber}`);\n            valueEnd += 1;\n            value = (0, $cbdf17c3d09bc906$export$f0199846ca09d4f9)(line.slice(valueStart, valueEnd));\n            index = valueEnd;\n        } else {\n            // no quotes\n            let valueEnd = line.indexOf(\" \", valueStart);\n            if (valueEnd < 0) valueEnd = line.length;\n            value = line.slice(valueStart, valueEnd);\n            index = valueEnd;\n        }\n        attributes[key] = value;\n    }\n    return attributes;\n}\nfunction $fdfd340aa13d9aca$export$f35c23e4edfee720(text) {\n    const animations = [];\n    let lineNumber = 0;\n    let currentAnimation;\n    let currentFrame;\n    for (let line of text.split(\"\\n\")){\n        line = line.trim();\n        lineNumber += 1;\n        if (line == \"\" || line.startsWith(\"#\") || line.startsWith(\"imagePath\") || line.startsWith(\"version\")) continue;\n        if (line.startsWith(\"animation \")) {\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const animation = {\n                state: attributes.state,\n                frames: []\n            };\n            if (!attributes.state) throw new Error(`Animation is missing state name on line ${lineNumber}`);\n            animations.push(animation);\n            currentAnimation = animation;\n        } else if (line.startsWith(\"frame\") || line.startsWith(\"blank\")) {\n            if (!currentAnimation) throw new Error(`No animation state to associate frame with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const frame = {\n                x: parseFloat(attributes.x) || 0,\n                y: parseFloat(attributes.y) || 0,\n                w: parseFloat(attributes.w) || 0,\n                h: parseFloat(attributes.h) || 0,\n                originx: parseFloat(attributes.originx) || 0,\n                originy: parseFloat(attributes.originy) || 0,\n                flipx: parseInt(attributes.flipx) == 1,\n                flipy: parseInt(attributes.flipy) == 1,\n                duration: attributes.duration || \"\",\n                points: []\n            };\n            currentAnimation.frames.push(frame);\n            currentFrame = frame;\n        } else if (line.startsWith(\"point \")) {\n            if (!currentFrame) throw new Error(`No frame to associate point with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            if (!attributes.label) throw new Error(`Point is missing label on line ${lineNumber}`);\n            const point = {\n                label: attributes.label,\n                x: parseFloat(attributes.x),\n                y: parseFloat(attributes.y)\n            };\n            currentFrame.points.push(point);\n        } else {\n            const wordEnd = line.indexOf(\" \");\n            const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n            throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n        }\n    }\n    return animations;\n}\nfunction $fdfd340aa13d9aca$var$serializeObject(name, object, options = {\n    quoteAllValues: true\n}) {\n    const text = [\n        name\n    ];\n    for(const key in object){\n        const value = object[key];\n        switch(typeof value){\n            case \"string\":\n                if (value != \"\") {\n                    text.push(\" \");\n                    text.push(key);\n                    text.push(\"=\");\n                    text.push((0, $cbdf17c3d09bc906$export$7b3cbda67be88f5f)(value));\n                }\n                break;\n            case \"number\":\n                if (value != 0) {\n                    if (options.quoteAllValues) text.push(` ${key}=\"${value}\"`);\n                    else text.push(` ${key}=${value}`);\n                }\n                break;\n            case \"boolean\":\n                if (value == true) {\n                    text.push(\" \");\n                    text.push(key);\n                    if (options.quoteAllValues) text.push('=\"1\"');\n                    else text.push(\"=1\");\n                }\n                break;\n            case \"object\":\n                if (Array.isArray(value)) break;\n            default:\n                throw new Error(`Unexpected ${typeof value} for ${key}`);\n        }\n    }\n    return text.join(\"\");\n}\nfunction $fdfd340aa13d9aca$export$fa848666f543bc00(animations) {\n    const lines = [];\n    for (const animation of animations){\n        lines.push($fdfd340aa13d9aca$var$serializeObject(\"animation\", animation));\n        for (const frame of animation.frames){\n            lines.push($fdfd340aa13d9aca$var$serializeObject(\"frame\", frame));\n            for (const point of frame.points)lines.push($fdfd340aa13d9aca$var$serializeObject(\"point\", point));\n        }\n        lines.push(\"\");\n    }\n    return lines.join(\"\\n\");\n}\n\n\nvar $7bcff58d1f5524c8$exports = {};\n\"use strict\";\nvar $06f5eb59911c96c0$exports = {};\n/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/ var $06f5eb59911c96c0$var$GrowingPacker = function() {};\n$06f5eb59911c96c0$var$GrowingPacker.prototype = {\n    fit: function(blocks) {\n        var n, node, block, len = blocks.length, fit;\n        var width = len > 0 ? blocks[0].width : 0;\n        var height = len > 0 ? blocks[0].height : 0;\n        this.root = {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        };\n        for(n = 0; n < len; n++){\n            block = blocks[n];\n            if (node = this.findNode(this.root, block.width, block.height)) {\n                fit = this.splitNode(node, block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            } else {\n                fit = this.growNode(block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            }\n        }\n    },\n    findNode: function(root, width, height) {\n        if (root.used) return this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n        else if (width <= root.width && height <= root.height) return root;\n        else return null;\n    },\n    splitNode: function(node, width, height) {\n        node.used = true;\n        node.down = {\n            x: node.x,\n            y: node.y + height,\n            width: node.width,\n            height: node.height - height\n        };\n        node.right = {\n            x: node.x + width,\n            y: node.y,\n            width: node.width - width,\n            height: height\n        };\n        return node;\n    },\n    growNode: function(width, height) {\n        var canGrowDown = width <= this.root.width;\n        var canGrowRight = height <= this.root.height;\n        var shouldGrowRight = canGrowRight && this.root.height >= this.root.width + width; // attempt to keep square-ish by growing right when height is much greater than width\n        var shouldGrowDown = canGrowDown && this.root.width >= this.root.height + height; // attempt to keep square-ish by growing down  when width  is much greater than height\n        if (shouldGrowRight) return this.growRight(width, height);\n        else if (shouldGrowDown) return this.growDown(width, height);\n        else if (canGrowRight) return this.growRight(width, height);\n        else if (canGrowDown) return this.growDown(width, height);\n        else return null; // need to ensure sensible root starting size to avoid this happening\n    },\n    growRight: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width + width,\n            height: this.root.height,\n            down: this.root,\n            right: {\n                x: this.root.width,\n                y: 0,\n                width: width,\n                height: this.root.height\n            }\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    },\n    growDown: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width,\n            height: this.root.height + height,\n            down: {\n                x: 0,\n                y: this.root.height,\n                width: this.root.width,\n                height: height\n            },\n            right: this.root\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    }\n};\n$06f5eb59911c96c0$exports = $06f5eb59911c96c0$var$GrowingPacker;\n\n\n$7bcff58d1f5524c8$exports = function(items, options) {\n    options = options || {};\n    var packer = new $06f5eb59911c96c0$exports();\n    var inPlace = options.inPlace || false;\n    // Clone the items.\n    var newItems = items.map(function(item) {\n        return inPlace ? item : {\n            width: item.width,\n            height: item.height,\n            item: item\n        };\n    });\n    newItems = newItems.sort(function(a, b) {\n        // TODO: check that each actually HAS a width and a height.\n        // Sort based on the size (area) of each block.\n        return b.width * b.height - a.width * a.height;\n    });\n    packer.fit(newItems);\n    var w = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.x + item.width);\n    }, 0);\n    var h = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.y + item.height);\n    }, 0);\n    var ret = {\n        width: w,\n        height: h\n    };\n    if (!inPlace) ret.items = newItems;\n    return ret;\n};\n\n\nvar $fd882af322e8eaf8$exports = {};\n\n\n\n\n(function() {\n    var crypt = (parcelRequire(\"12eZZ\")), utf8 = (parcelRequire(\"a74v9\")).utf8, isBuffer = (parcelRequire(\"7B5Ea\")), bin = (parcelRequire(\"a74v9\")).bin, // The core\n    md5 = function(message, options) {\n        // Convert to byte array\n        if (message.constructor == String) {\n            if (options && options.encoding === \"binary\") message = bin.stringToBytes(message);\n            else message = utf8.stringToBytes(message);\n        } else if (isBuffer(message)) message = Array.prototype.slice.call(message, 0);\n        else if (!Array.isArray(message) && message.constructor !== Uint8Array) message = message.toString();\n        // else, assume byte array already\n        var m = crypt.bytesToWords(message), l = message.length * 8, a = 1732584193, b = -271733879, c = -1732584194, d = 271733878;\n        // Swap endian\n        for(var i = 0; i < m.length; i++)m[i] = (m[i] << 8 | m[i] >>> 24) & 0x00FF00FF | (m[i] << 24 | m[i] >>> 8) & 0xFF00FF00;\n        // Padding\n        m[l >>> 5] |= 0x80 << l % 32;\n        m[(l + 64 >>> 9 << 4) + 14] = l;\n        // Method shortcuts\n        var FF = md5._ff, GG = md5._gg, HH = md5._hh, II = md5._ii;\n        for(var i = 0; i < m.length; i += 16){\n            var aa = a, bb = b, cc = c, dd = d;\n            a = FF(a, b, c, d, m[i + 0], 7, -680876936);\n            d = FF(d, a, b, c, m[i + 1], 12, -389564586);\n            c = FF(c, d, a, b, m[i + 2], 17, 606105819);\n            b = FF(b, c, d, a, m[i + 3], 22, -1044525330);\n            a = FF(a, b, c, d, m[i + 4], 7, -176418897);\n            d = FF(d, a, b, c, m[i + 5], 12, 1200080426);\n            c = FF(c, d, a, b, m[i + 6], 17, -1473231341);\n            b = FF(b, c, d, a, m[i + 7], 22, -45705983);\n            a = FF(a, b, c, d, m[i + 8], 7, 1770035416);\n            d = FF(d, a, b, c, m[i + 9], 12, -1958414417);\n            c = FF(c, d, a, b, m[i + 10], 17, -42063);\n            b = FF(b, c, d, a, m[i + 11], 22, -1990404162);\n            a = FF(a, b, c, d, m[i + 12], 7, 1804603682);\n            d = FF(d, a, b, c, m[i + 13], 12, -40341101);\n            c = FF(c, d, a, b, m[i + 14], 17, -1502002290);\n            b = FF(b, c, d, a, m[i + 15], 22, 1236535329);\n            a = GG(a, b, c, d, m[i + 1], 5, -165796510);\n            d = GG(d, a, b, c, m[i + 6], 9, -1069501632);\n            c = GG(c, d, a, b, m[i + 11], 14, 643717713);\n            b = GG(b, c, d, a, m[i + 0], 20, -373897302);\n            a = GG(a, b, c, d, m[i + 5], 5, -701558691);\n            d = GG(d, a, b, c, m[i + 10], 9, 38016083);\n            c = GG(c, d, a, b, m[i + 15], 14, -660478335);\n            b = GG(b, c, d, a, m[i + 4], 20, -405537848);\n            a = GG(a, b, c, d, m[i + 9], 5, 568446438);\n            d = GG(d, a, b, c, m[i + 14], 9, -1019803690);\n            c = GG(c, d, a, b, m[i + 3], 14, -187363961);\n            b = GG(b, c, d, a, m[i + 8], 20, 1163531501);\n            a = GG(a, b, c, d, m[i + 13], 5, -1444681467);\n            d = GG(d, a, b, c, m[i + 2], 9, -51403784);\n            c = GG(c, d, a, b, m[i + 7], 14, 1735328473);\n            b = GG(b, c, d, a, m[i + 12], 20, -1926607734);\n            a = HH(a, b, c, d, m[i + 5], 4, -378558);\n            d = HH(d, a, b, c, m[i + 8], 11, -2022574463);\n            c = HH(c, d, a, b, m[i + 11], 16, 1839030562);\n            b = HH(b, c, d, a, m[i + 14], 23, -35309556);\n            a = HH(a, b, c, d, m[i + 1], 4, -1530992060);\n            d = HH(d, a, b, c, m[i + 4], 11, 1272893353);\n            c = HH(c, d, a, b, m[i + 7], 16, -155497632);\n            b = HH(b, c, d, a, m[i + 10], 23, -1094730640);\n            a = HH(a, b, c, d, m[i + 13], 4, 681279174);\n            d = HH(d, a, b, c, m[i + 0], 11, -358537222);\n            c = HH(c, d, a, b, m[i + 3], 16, -722521979);\n            b = HH(b, c, d, a, m[i + 6], 23, 76029189);\n            a = HH(a, b, c, d, m[i + 9], 4, -640364487);\n            d = HH(d, a, b, c, m[i + 12], 11, -421815835);\n            c = HH(c, d, a, b, m[i + 15], 16, 530742520);\n            b = HH(b, c, d, a, m[i + 2], 23, -995338651);\n            a = II(a, b, c, d, m[i + 0], 6, -198630844);\n            d = II(d, a, b, c, m[i + 7], 10, 1126891415);\n            c = II(c, d, a, b, m[i + 14], 15, -1416354905);\n            b = II(b, c, d, a, m[i + 5], 21, -57434055);\n            a = II(a, b, c, d, m[i + 12], 6, 1700485571);\n            d = II(d, a, b, c, m[i + 3], 10, -1894986606);\n            c = II(c, d, a, b, m[i + 10], 15, -1051523);\n            b = II(b, c, d, a, m[i + 1], 21, -2054922799);\n            a = II(a, b, c, d, m[i + 8], 6, 1873313359);\n            d = II(d, a, b, c, m[i + 15], 10, -30611744);\n            c = II(c, d, a, b, m[i + 6], 15, -1560198380);\n            b = II(b, c, d, a, m[i + 13], 21, 1309151649);\n            a = II(a, b, c, d, m[i + 4], 6, -145523070);\n            d = II(d, a, b, c, m[i + 11], 10, -1120210379);\n            c = II(c, d, a, b, m[i + 2], 15, 718787259);\n            b = II(b, c, d, a, m[i + 9], 21, -343485551);\n            a = a + aa >>> 0;\n            b = b + bb >>> 0;\n            c = c + cc >>> 0;\n            d = d + dd >>> 0;\n        }\n        return crypt.endian([\n            a,\n            b,\n            c,\n            d\n        ]);\n    };\n    // Auxiliary functions\n    md5._ff = function(a, b, c, d, x, s, t) {\n        var n = a + (b & c | ~b & d) + (x >>> 0) + t;\n        return (n << s | n >>> 32 - s) + b;\n    };\n    md5._gg = function(a, b, c, d, x, s, t) {\n        var n = a + (b & d | c & ~d) + (x >>> 0) + t;\n        return (n << s | n >>> 32 - s) + b;\n    };\n    md5._hh = function(a, b, c, d, x, s, t) {\n        var n = a + (b ^ c ^ d) + (x >>> 0) + t;\n        return (n << s | n >>> 32 - s) + b;\n    };\n    md5._ii = function(a, b, c, d, x, s, t) {\n        var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\n        return (n << s | n >>> 32 - s) + b;\n    };\n    // Package private blocksize\n    md5._blocksize = 16;\n    md5._digestsize = 16;\n    $fd882af322e8eaf8$exports = function(message, options) {\n        if (message === undefined || message === null) throw new Error(\"Illegal argument \" + message);\n        var digestbytes = crypt.wordsToBytes(md5(message, options));\n        return options && options.asBytes ? digestbytes : options && options.asString ? bin.bytesToString(digestbytes) : crypt.bytesToHex(digestbytes);\n    };\n})();\n\n\nconst $198de2760da31229$var$padding = 1;\nfunction $198de2760da31229$var$matchBin(binMap, key, frame, imageData) {\n    let matchingBins = binMap[key];\n    if (!matchingBins) {\n        matchingBins = [];\n        binMap[key] = matchingBins;\n    }\n    for (const bin of matchingBins){\n        if (bin.frames[0].w != frame.w || bin.frames[0].h != frame.h) continue;\n        if (!bin.imageData.data.every((b, i)=>b == imageData.data[i])) continue;\n        return bin;\n    }\n}\nfunction $198de2760da31229$var$getImageIndex(w, x, y) {\n    return (y * w + x) * 4;\n}\nfunction $198de2760da31229$export$2e2bcd8739ae039(destCanvas, sourceCanvas, animations) {\n    const sourceCtx = sourceCanvas.getContext(\"2d\");\n    const binMap = {};\n    for (const animation of animations)for (const frame of animation.frames){\n        const imageData = sourceCtx.getImageData(frame.x, frame.y, frame.w, frame.h);\n        const key = (0, (/*@__PURE__*/$parcel$interopDefault($fd882af322e8eaf8$exports)))(imageData.data);\n        let matchingBin = $198de2760da31229$var$matchBin(binMap, key, frame, imageData);\n        if (!matchingBin) {\n            // try flipped, only on the x axis since it's common\n            const flippedImageData = sourceCtx.getImageData(frame.x, frame.y, frame.w, frame.h);\n            for(let y = 0; y < frame.h; y++)for(let x = 0; x < frame.w; x++){\n                const i = $198de2760da31229$var$getImageIndex(frame.w, x, y);\n                const flippedI = $198de2760da31229$var$getImageIndex(frame.w, frame.w - x - 1, y);\n                for(let j = 0; j < 4; j++)flippedImageData.data[i + j] = imageData.data[flippedI + j];\n            }\n            const flippedKey = (0, (/*@__PURE__*/$parcel$interopDefault($fd882af322e8eaf8$exports)))(flippedImageData.data);\n            matchingBin = $198de2760da31229$var$matchBin(binMap, flippedKey, frame, flippedImageData);\n            if (matchingBin) {\n                frame.flipx = !frame.flipx;\n                frame.originx = frame.w - frame.originx;\n            }\n        }\n        if (matchingBin) matchingBin.frames.push(frame);\n        else binMap[key].push({\n            frames: [\n                frame\n            ],\n            imageData: imageData,\n            width: frame.w + $198de2760da31229$var$padding * 2,\n            height: frame.h + $198de2760da31229$var$padding * 2\n        });\n    }\n    // pack\n    const bins = Object.values(binMap).flat();\n    const packResult = (0, (/*@__PURE__*/$parcel$interopDefault($7bcff58d1f5524c8$exports)))(bins);\n    // update frames and render\n    destCanvas.width = packResult.width;\n    destCanvas.height = packResult.height;\n    const ctx = destCanvas.getContext(\"2d\");\n    for (const item of packResult.items){\n        const { frames: frames } = item.item;\n        const frame = item.item.frames[0];\n        const destX = item.x + $198de2760da31229$var$padding;\n        const destY = item.y + $198de2760da31229$var$padding;\n        ctx.drawImage(sourceCanvas, frame.x, frame.y, frame.w, frame.h, destX, destY, frame.w, frame.h);\n        for (const frame of frames){\n            frame.x = destX;\n            frame.y = destY;\n        }\n    }\n    return animations;\n}\n\n\nfunction $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f(file) {\n    return new Promise((resolve, reject)=>{\n        // load file as data url, then load as image\n        const reader = new FileReader();\n        reader.onload = function() {\n            // load image\n            const image = new Image();\n            image.src = reader.result;\n            image.onload = function() {\n                resolve(image);\n            };\n            image.onerror = function() {\n                reject(new Error(`Failed to load \"${file.name}\"`));\n            };\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsDataURL(file);\n    });\n}\nfunction $a9cec9f5d2c68d09$export$b4f0996f721d43ec(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = function() {\n            resolve(reader.result);\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsText(file);\n    });\n}\n\n\n\nconst $92177892b4efbc96$var$padding = 1;\nfunction $92177892b4efbc96$var$createBinsForFrames(frames) {\n    return frames.map((frame)=>({\n            overlayed: [\n                {\n                    frame: frame,\n                    offsetx: 0,\n                    offsety: 0\n                }\n            ],\n            outFrame: {\n                x: 0,\n                y: 0,\n                w: frame.w,\n                h: frame.h,\n                originx: frame.originx,\n                originy: frame.originy,\n                flipx: false,\n                flipy: false,\n                duration: frame.duration,\n                points: frame.points\n            },\n            width: 0,\n            height: 0\n        }));\n}\nconst $92177892b4efbc96$var$MIGRATIONS = {\n    HAND: function() {\n    // delete\n    },\n    HILT: function() {\n    // delete\n    },\n    CHARACTER_SWING: function(inputSheet, binMap, originalAnimation) {\n        const hiltAnimation = inputSheet.animations.find((anim)=>anim.state.toUpperCase() == \"HILT\");\n        if (hiltAnimation) {\n            const bins = $92177892b4efbc96$var$createBinsForFrames(originalAnimation.frames);\n            let i = 1;\n            bins[0].outFrame.points = [];\n            for (const frame of hiltAnimation.frames){\n                let bin = bins[i++];\n                const baseFrame = bin.overlayed[0].frame;\n                const hiltPoint = baseFrame.points.find((p)=>p.label.toUpperCase() == \"HILT\") ?? {\n                    x: 0,\n                    y: 0\n                };\n                const offsetx = hiltPoint.x - baseFrame.originx;\n                const offsety = hiltPoint.y - baseFrame.originy;\n                bin.overlayed.push({\n                    frame: frame,\n                    offsetx: offsetx,\n                    offsety: offsety\n                });\n                const endPoint = frame.points.find((p)=>p.label.toUpperCase() == \"ENDPOINT\");\n                bin.outFrame.points = [\n                    {\n                        label: \"ENDPOINT\",\n                        x: hiltPoint.x - frame.originx + (endPoint?.x ?? 0),\n                        y: hiltPoint.y - frame.originy + (endPoint?.y ?? 0)\n                    }\n                ];\n            }\n            binMap[\"CHARACTER_SWING_HILT\"] = bins;\n        }\n        const handAnimation = inputSheet.animations.find((anim)=>anim.state.toUpperCase() == \"HAND\");\n        if (handAnimation) {\n            const bins = $92177892b4efbc96$var$createBinsForFrames(originalAnimation.frames);\n            let i = 1;\n            bins[0].outFrame.points = [];\n            for (const frame of handAnimation.frames){\n                let bin = bins[i++];\n                const baseFrame = bin.overlayed[0].frame;\n                const hiltPoint = baseFrame.points.find((p)=>p.label.toUpperCase() == \"HILT\") ?? {\n                    x: 0,\n                    y: 0\n                };\n                bin.overlayed.push({\n                    frame: frame,\n                    offsetx: hiltPoint.x - baseFrame.originx,\n                    offsety: hiltPoint.y - baseFrame.originy\n                });\n                bin.outFrame.points = [];\n                binMap[\"CHARACTER_SWING_HAND\"] = bins;\n            }\n        }\n    }\n};\nfunction $92177892b4efbc96$export$2e2bcd8739ae039(canvas, inputSheet) {\n    if (!inputSheet.animations || !inputSheet.image) return [];\n    const binMap = {};\n    // create bins for the animation\n    for (const animation of inputSheet.animations){\n        const migrate = $92177892b4efbc96$var$MIGRATIONS[animation.state.toUpperCase()];\n        if (migrate) migrate(inputSheet, binMap, animation);\n        else binMap[animation.state] = $92177892b4efbc96$var$createBinsForFrames(animation.frames);\n    }\n    // resolve outFrame sizes and origin\n    const bins = Object.values(binMap).flat();\n    for (const bin of bins){\n        // resolve origin\n        const prevOriginX = bin.outFrame.originx;\n        const prevOriginY = bin.outFrame.originy;\n        for (const { frame: frame, offsetx: offsetx, offsety: offsety } of bin.overlayed){\n            bin.outFrame.originx = Math.max(bin.outFrame.originx, frame.originx - offsetx);\n            bin.outFrame.originy = Math.max(bin.outFrame.originy, frame.originy - offsety);\n        }\n        // update points\n        const originShiftX = bin.outFrame.originx - prevOriginX;\n        const originShiftY = bin.outFrame.originy - prevOriginY;\n        for (const point of bin.outFrame.points){\n            point.x -= originShiftX;\n            point.y -= originShiftY;\n        }\n        // resolve size\n        for (const { frame: frame, offsetx: offsetx, offsety: offsety } of bin.overlayed){\n            bin.outFrame.w = Math.max(bin.outFrame.w, bin.outFrame.originx - frame.originx + frame.w + offsetx);\n            bin.outFrame.h = Math.max(bin.outFrame.h, bin.outFrame.originy - frame.originy + frame.h + offsety);\n        }\n        bin.width = bin.outFrame.w + $92177892b4efbc96$var$padding * 2;\n        bin.height = bin.outFrame.h + $92177892b4efbc96$var$padding * 2;\n    }\n    // pack\n    const packResult = (0, (/*@__PURE__*/$parcel$interopDefault($7bcff58d1f5524c8$exports)))(bins);\n    // update outFrames and render\n    canvas.width = packResult.width;\n    canvas.height = packResult.height;\n    const ctx = canvas.getContext(\"2d\");\n    for (const item of packResult.items){\n        const destX = item.x + $92177892b4efbc96$var$padding;\n        const destY = item.y + $92177892b4efbc96$var$padding;\n        const { outFrame: outFrame } = item.item;\n        outFrame.x = destX;\n        outFrame.y = destY;\n        const image = inputSheet.image;\n        for (const { frame: frame, offsetx: offsetx, offsety: offsety } of item.item.overlayed){\n            if (!image) continue;\n            const destX = outFrame.x + outFrame.originx - frame.originx + offsetx;\n            const destY = outFrame.y + outFrame.originy - frame.originy + offsety;\n            ctx.save();\n            ctx.translate(destX, destY);\n            if (frame.flipx) {\n                ctx.translate(frame.w, 0);\n                ctx.scale(-1, 1);\n            }\n            if (frame.flipy) {\n                ctx.translate(frame.h, 0);\n                ctx.scale(1, -1);\n            }\n            ctx.drawImage(image, frame.x, frame.y, frame.w, frame.h, 0, 0, frame.w, frame.h);\n            ctx.restore();\n        }\n    }\n    // generate animation from bin map\n    const animations = Object.entries(binMap).map(([state, bins])=>({\n            state: state,\n            frames: bins.map((bin)=>bin.outFrame)\n        }));\n    return animations;\n}\n\n\nconst $b4e14b6b8da86996$var$inputSheet = {};\nfunction $b4e14b6b8da86996$var$logError(error) {\n    console.error(error);\n    alert(error);\n}\nfunction $b4e14b6b8da86996$var$resolveErrorMessage() {\n    if (!$b4e14b6b8da86996$var$inputSheet.image || !$b4e14b6b8da86996$var$inputSheet.animations) {\n        if ($b4e14b6b8da86996$var$inputSheet.animationError) return $b4e14b6b8da86996$var$inputSheet.animationError;\n        else if ($b4e14b6b8da86996$var$inputSheet.imageError) return $b4e14b6b8da86996$var$inputSheet.imageError;\n        else if (!$b4e14b6b8da86996$var$inputSheet.animations) return \"Missing .animation file\";\n        else if (!$b4e14b6b8da86996$var$inputSheet.image) return \"Missing image file\";\n    }\n    return \"\";\n}\nfunction $b4e14b6b8da86996$var$displayError() {\n    const errorElement = document.querySelector(\"#error-text\");\n    errorElement.innerText = $b4e14b6b8da86996$var$resolveErrorMessage();\n}\nfunction $b4e14b6b8da86996$var$gup() {\n    const canvas = document.querySelector(\"canvas\");\n    const textarea = document.querySelector(\"textarea\");\n    try {\n        const offscreenCanvas = document.createElement(\"canvas\");\n        const animations = (0, $92177892b4efbc96$export$2e2bcd8739ae039)(offscreenCanvas, $b4e14b6b8da86996$var$inputSheet);\n        (0, $198de2760da31229$export$2e2bcd8739ae039)(canvas, offscreenCanvas, animations);\n        textarea.value = (0, $fdfd340aa13d9aca$export$fa848666f543bc00)(animations);\n    } catch (error) {\n        $b4e14b6b8da86996$var$logError(error);\n    }\n}\ndocument.body.addEventListener(\"dragover\", (event)=>event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event)=>{\n    const items = event.dataTransfer?.items;\n    if (!items) return;\n    event.preventDefault();\n    const files = [];\n    for (const item of items){\n        const file = item.getAsFile();\n        if (file) files.push(file);\n    }\n    $b4e14b6b8da86996$var$loadFiles(files).catch($b4e14b6b8da86996$var$logError).finally(()=>{\n        $b4e14b6b8da86996$var$displayError();\n    });\n});\nasync function $b4e14b6b8da86996$var$loadFiles(files) {\n    for (const file of files){\n        if (file.name.endsWith(\".png\")) try {\n            $b4e14b6b8da86996$var$inputSheet.image = await (0, $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f)(file);\n            $b4e14b6b8da86996$var$inputSheet.imageError = undefined;\n        } catch (error) {\n            console.error(error);\n            $b4e14b6b8da86996$var$inputSheet.imageError = error.toString();\n        }\n        else if (file.name.endsWith(\".animation\")) try {\n            const text = await (0, $a9cec9f5d2c68d09$export$b4f0996f721d43ec)(file);\n            $b4e14b6b8da86996$var$inputSheet.animations = (0, $fdfd340aa13d9aca$export$f35c23e4edfee720)(text);\n            $b4e14b6b8da86996$var$inputSheet.animationError = undefined;\n        } catch (error) {\n            console.error(error);\n            $b4e14b6b8da86996$var$inputSheet.animationError = error.toString();\n        }\n    }\n    if (!$b4e14b6b8da86996$var$inputSheet.imageError && !$b4e14b6b8da86996$var$inputSheet.animationError) $b4e14b6b8da86996$var$gup();\n}\n\n\n//# sourceMappingURL=index.9b671f25.js.map\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","import {\n  parseAnimationsText,\n  serializeAnimations,\n} from \"./boomsheets-animations\";\nimport dedupSheet from \"./dedup-sheet\";\nimport { loadImageFile, loadTextFile } from \"./file-loading\";\nimport { InputSheet } from \"./input-sheet\";\nimport updateSheet from \"./update-sheet\";\n\nconst inputSheet: InputSheet = {};\n\nfunction logError(error) {\n  console.error(error);\n  alert(error);\n}\n\nfunction resolveErrorMessage() {\n  if (!inputSheet.image || !inputSheet.animations) {\n    if (inputSheet.animationError) {\n      return inputSheet.animationError;\n    } else if (inputSheet.imageError) {\n      return inputSheet.imageError;\n    } else if (!inputSheet.animations) {\n      return \"Missing .animation file\";\n    } else if (!inputSheet.image) {\n      return \"Missing image file\";\n    }\n  }\n\n  return \"\";\n}\n\nfunction displayError() {\n  const errorElement = document.querySelector(\"#error-text\")! as HTMLElement;\n  errorElement.innerText = resolveErrorMessage();\n}\n\nfunction gup() {\n  const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\n  const textarea = document.querySelector(\"textarea\") as HTMLTextAreaElement;\n\n  try {\n    const offscreenCanvas = document.createElement(\"canvas\");\n    const animations = updateSheet(offscreenCanvas, inputSheet);\n    dedupSheet(canvas, offscreenCanvas, animations);\n    textarea.value = serializeAnimations(animations);\n  } catch (error) {\n    logError(error);\n  }\n}\n\ndocument.body.addEventListener(\"dragover\", (event) => event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event) => {\n  const items = event.dataTransfer?.items;\n\n  if (!items) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const files: File[] = [];\n\n  for (const item of items) {\n    const file = item.getAsFile();\n\n    if (file) {\n      files.push(file);\n    }\n  }\n\n  loadFiles(files)\n    .catch(logError)\n    .finally(() => {\n      displayError();\n    });\n});\n\nasync function loadFiles(files: File[]) {\n  for (const file of files) {\n    if (file.name.endsWith(\".png\")) {\n      try {\n        inputSheet.image = await loadImageFile(file);\n        inputSheet.imageError = undefined;\n      } catch (error) {\n        console.error(error);\n        inputSheet.imageError = error!.toString();\n      }\n    } else if (file.name.endsWith(\".animation\")) {\n      try {\n        const text = await loadTextFile(file);\n\n        inputSheet.animations = parseAnimationsText(text);\n        inputSheet.animationError = undefined;\n      } catch (error) {\n        console.error(error);\n        inputSheet.animationError = error!.toString();\n      }\n    }\n  }\n\n  if (!inputSheet.imageError && !inputSheet.animationError) {\n    gup();\n  }\n}\n","import { double as quote, unquote } from \"quote-unquote\";\n\nexport type BoomSheetsPoint = {\n  label: string;\n  x: number;\n  y: number;\n};\n\nexport type BoomSheetsFrame = {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  originx: number;\n  originy: number;\n  flipx: boolean;\n  flipy: boolean;\n  duration: string;\n  points: BoomSheetsPoint[];\n};\n\nexport type BoomSheetsAnimation = {\n  state: string;\n  frames: BoomSheetsFrame[];\n};\n\ntype Attributes = { [key: string]: string };\nconst nonSpaceRegex = /\\S/g;\nconst keyEndRegex = /[\\s=]/g;\n\nfunction matchGRegexFrom(\n  text: string,\n  regex: RegExp,\n  index: number\n): RegExpMatchArray | null {\n  regex.lastIndex = index;\n  return regex.exec(text);\n}\n\nfunction stringCharIsEscaped(text: string, index: number): boolean {\n  let escaped = false;\n\n  while (index > 0) {\n    index -= 1;\n\n    if (text[index] != \"\\\\\") {\n      break;\n    }\n\n    escaped = !escaped;\n  }\n\n  return escaped;\n}\n\nfunction findClosingQuote(text: string, index: number): number {\n  // search for non escaped quote\n  while (true) {\n    if ((index = text.indexOf('\"', index)) < 0) {\n      return -1;\n    }\n\n    if (!stringCharIsEscaped(text, index)) {\n      break;\n    }\n\n    index += 1;\n  }\n\n  return index;\n}\n\nfunction parseAttributes(line: string, lineNumber: number): Attributes {\n  const attributes: Attributes = {};\n\n  let index = line.indexOf(\" \");\n\n  if (index < 0) {\n    // no attributes\n    return attributes;\n  }\n\n  let match: RegExpMatchArray | null;\n\n  while ((match = matchGRegexFrom(line, nonSpaceRegex, index))) {\n    index = match.index!;\n\n    // find key end\n    match = matchGRegexFrom(line, keyEndRegex, index);\n\n    if (!match) {\n      throw new Error(\n        `Unexpected \"${line.slice(index)}\" on line ${lineNumber}`\n      );\n    }\n\n    const key = line.slice(index, match.index!);\n\n    // find \"=\"\n    const eqIndex = line.indexOf(\"=\", match.index);\n\n    if (eqIndex < 0) {\n      throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n    }\n\n    // find value start\n    match = matchGRegexFrom(line, nonSpaceRegex, eqIndex + 1);\n\n    if (!match) {\n      throw new Error(`Attribute is missing value on line ${lineNumber}`);\n    }\n\n    // find value end\n    let valueStart = match.index!;\n    let value = \"\";\n\n    if (line[valueStart] == '\"') {\n      // quoted value\n      let valueEnd = findClosingQuote(line, valueStart + 1);\n\n      if (valueEnd < 0) {\n        throw new Error(`String missing closing quote on line ${lineNumber}`);\n      }\n\n      valueEnd += 1;\n\n      value = unquote(line.slice(valueStart, valueEnd));\n      index = valueEnd;\n    } else {\n      // no quotes\n      let valueEnd = line.indexOf(\" \", valueStart);\n\n      if (valueEnd < 0) {\n        valueEnd = line.length;\n      }\n\n      value = line.slice(valueStart, valueEnd);\n      index = valueEnd;\n    }\n\n    attributes[key] = value;\n  }\n\n  return attributes;\n}\n\nexport function parseAnimationsText(text: string): BoomSheetsAnimation[] {\n  const animations: BoomSheetsAnimation[] = [];\n\n  let lineNumber = 0;\n  let currentAnimation: BoomSheetsAnimation | undefined;\n  let currentFrame: BoomSheetsFrame | undefined;\n\n  for (let line of text.split(\"\\n\")) {\n    line = line.trim();\n    lineNumber += 1;\n\n    if (\n      line == \"\" ||\n      line.startsWith(\"#\") ||\n      line.startsWith(\"imagePath\") ||\n      line.startsWith(\"version\")\n    ) {\n      // skip\n      continue;\n    }\n\n    if (line.startsWith(\"animation \")) {\n      const attributes = parseAttributes(line, lineNumber);\n\n      const animation: BoomSheetsAnimation = {\n        state: attributes.state,\n        frames: [],\n      };\n\n      if (!attributes.state) {\n        throw new Error(\n          `Animation is missing state name on line ${lineNumber}`\n        );\n      }\n\n      animations.push(animation);\n      currentAnimation = animation;\n    } else if (line.startsWith(\"frame\") || line.startsWith(\"blank\")) {\n      if (!currentAnimation) {\n        throw new Error(\n          `No animation state to associate frame with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      const frame: BoomSheetsFrame = {\n        x: parseFloat(attributes.x) || 0,\n        y: parseFloat(attributes.y) || 0,\n        w: parseFloat(attributes.w) || 0,\n        h: parseFloat(attributes.h) || 0,\n        originx: parseFloat(attributes.originx) || 0,\n        originy: parseFloat(attributes.originy) || 0,\n        flipx: parseInt(attributes.flipx) == 1,\n        flipy: parseInt(attributes.flipy) == 1,\n        duration: attributes.duration || \"\",\n        points: [],\n      };\n\n      currentAnimation.frames.push(frame);\n      currentFrame = frame;\n    } else if (line.startsWith(\"point \")) {\n      if (!currentFrame) {\n        throw new Error(\n          `No frame to associate point with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      if (!attributes.label) {\n        throw new Error(`Point is missing label on line ${lineNumber}`);\n      }\n\n      const point: BoomSheetsPoint = {\n        label: attributes.label,\n        x: parseFloat(attributes.x),\n        y: parseFloat(attributes.y),\n      };\n\n      currentFrame.points.push(point);\n    } else {\n      const wordEnd = line.indexOf(\" \");\n      const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n      throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n    }\n  }\n\n  return animations;\n}\n\nfunction serializeObject(\n  name: string,\n  object: Object,\n  options = { quoteAllValues: true }\n): string {\n  const text: string[] = [name];\n\n  for (const key in object) {\n    const value = object[key];\n\n    switch (typeof value) {\n      case \"string\":\n        if (value != \"\") {\n          text.push(\" \");\n          text.push(key);\n          text.push(\"=\");\n          text.push(quote(value));\n        }\n        break;\n      case \"number\":\n        if (value != 0) {\n          if (options.quoteAllValues) {\n            text.push(` ${key}=\"${value}\"`);\n          } else {\n            text.push(` ${key}=${value}`);\n          }\n        }\n        break;\n      case \"boolean\":\n        if (value == true) {\n          text.push(\" \");\n          text.push(key);\n\n          if (options.quoteAllValues) {\n            text.push('=\"1\"');\n          } else {\n            text.push(\"=1\");\n          }\n        }\n        break;\n      case \"object\":\n        if (Array.isArray(value)) {\n          // fall through to error if the value is not an array\n          break;\n        }\n      default:\n        throw new Error(`Unexpected ${typeof value} for ${key}`);\n    }\n  }\n\n  return text.join(\"\");\n}\n\nexport function serializeAnimations(animations: BoomSheetsAnimation[]): string {\n  const lines: string[] = [];\n\n  for (const animation of animations) {\n    lines.push(serializeObject(\"animation\", animation));\n\n    for (const frame of animation.frames) {\n      lines.push(serializeObject(\"frame\", frame));\n\n      for (const point of frame.points) {\n        lines.push(serializeObject(\"point\", point));\n      }\n    }\n\n    lines.push(\"\");\n  }\n\n  return lines.join(\"\\n\");\n}\n","\nvar single = exports.single = function (s) {\n  return \"'\" + s.replace(/\\\\|'/g, function (m) { return '\\\\'+m })+\"'\"\n}\n\nvar double = exports.double = function (s) {\n  return '\"' + s.replace(/\\\\|\"/g, function (m) { return '\\\\'+m })+'\"'\n}\n\nexports.quote = function (s) {\n  return  /'/.test(s) ? double(s) : single(s)\n}\n\nexports.unquote = function (s) {\n  var quote = s[0]\n  var single = quote === \"'\"\n  return s.substring(1, s.length - 1)\n      .replace(/\\\\\\\\/g, '\\\\')\n      .replace(single ? /\\\\'/g : /\\\\\"/g, quote)\n}\n\n","import binPack from \"bin-pack\";\nimport { BoomSheetsAnimation, BoomSheetsFrame } from \"./boomsheets-animations\";\nimport md5 from \"md5\";\n\ntype FrameBin = {\n  frames: BoomSheetsFrame[];\n  imageData: ImageData;\n  width: number;\n  height: number;\n};\n\nconst padding = 1;\n\nfunction matchBin(\n  binMap: { [key: string]: FrameBin[] },\n  key: string,\n  frame: BoomSheetsFrame,\n  imageData: ImageData\n) {\n  let matchingBins = binMap[key];\n\n  if (!matchingBins) {\n    matchingBins = [];\n    binMap[key] = matchingBins;\n  }\n\n  for (const bin of matchingBins) {\n    if (bin.frames[0].w != frame.w || bin.frames[0].h != frame.h) {\n      continue;\n    }\n\n    if (!bin.imageData.data.every((b, i) => b == imageData.data[i])) {\n      continue;\n    }\n\n    return bin;\n  }\n}\n\nfunction getImageIndex(w: number, x: number, y: number) {\n  return (y * w + x) * 4;\n}\n\nexport default function dedupSheet(\n  destCanvas: HTMLCanvasElement,\n  sourceCanvas: HTMLCanvasElement,\n  animations: BoomSheetsAnimation[]\n) {\n  const sourceCtx = sourceCanvas.getContext(\"2d\")!;\n  const binMap: { [key: string]: FrameBin[] } = {};\n\n  for (const animation of animations) {\n    for (const frame of animation.frames) {\n      const imageData = sourceCtx.getImageData(\n        frame.x,\n        frame.y,\n        frame.w,\n        frame.h\n      );\n      const key = md5(imageData.data);\n\n      let matchingBin = matchBin(binMap, key, frame, imageData);\n\n      if (!matchingBin) {\n        // try flipped, only on the x axis since it's common\n        const flippedImageData = sourceCtx.getImageData(\n          frame.x,\n          frame.y,\n          frame.w,\n          frame.h\n        );\n\n        for (let y = 0; y < frame.h; y++) {\n          for (let x = 0; x < frame.w; x++) {\n            const i = getImageIndex(frame.w, x, y);\n            const flippedI = getImageIndex(frame.w, frame.w - x - 1, y);\n\n            for (let j = 0; j < 4; j++) {\n              flippedImageData.data[i + j] = imageData.data[flippedI + j];\n            }\n          }\n        }\n\n        const flippedKey = md5(flippedImageData.data);\n        matchingBin = matchBin(binMap, flippedKey, frame, flippedImageData);\n\n        if (matchingBin) {\n          frame.flipx = !frame.flipx;\n          frame.originx = frame.w - frame.originx;\n        }\n      }\n\n      if (matchingBin) {\n        matchingBin.frames.push(frame);\n      } else {\n        binMap[key].push({\n          frames: [frame],\n          imageData,\n          width: frame.w + padding * 2,\n          height: frame.h + padding * 2,\n        });\n      }\n    }\n  }\n\n  // pack\n  const bins: FrameBin[] = Object.values(binMap).flat();\n  const packResult = binPack(bins);\n\n  // update frames and render\n  destCanvas.width = packResult.width;\n  destCanvas.height = packResult.height;\n\n  const ctx = destCanvas.getContext(\"2d\")!;\n\n  for (const item of packResult.items) {\n    const { frames } = item.item;\n    const frame = item.item.frames[0];\n\n    const destX = item.x + padding;\n    const destY = item.y + padding;\n\n    ctx.drawImage(\n      sourceCanvas,\n      frame.x,\n      frame.y,\n      frame.w,\n      frame.h,\n      destX,\n      destY,\n      frame.w,\n      frame.h\n    );\n\n    for (const frame of frames) {\n      frame.x = destX;\n      frame.y = destY;\n    }\n  }\n\n  return animations;\n}\n","\"use strict\";\n\nvar GrowingPacker = require('./packer.growing.js');\n\nmodule.exports = function(items, options) {\n\toptions = options || {};\n\tvar packer = new GrowingPacker();\n\tvar inPlace = options.inPlace || false;\n\n\t// Clone the items.\n\tvar newItems = items.map(function(item) { return inPlace ? item : { width: item.width, height: item.height, item: item }; });\n\n\tnewItems = newItems.sort(function(a, b) {\n\t\t// TODO: check that each actually HAS a width and a height.\n\t\t// Sort based on the size (area) of each block.\n\t\treturn (b.width * b.height) - (a.width * a.height);\n\t});\n\n\tpacker.fit(newItems);\n\n\tvar w = newItems.reduce(function(curr, item) { return Math.max(curr, item.x + item.width); }, 0);\n\tvar h = newItems.reduce(function(curr, item) { return Math.max(curr, item.y + item.height); }, 0);\n\n\tvar ret = {\n\t\twidth: w,\n\t\theight: h\n\t};\n\n\tif (!inPlace) {\n\t\tret.items = newItems;\n\t}\n\n\treturn ret;\n};\n","/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/\n\nvar GrowingPacker = function() { };\n\nGrowingPacker.prototype = {\n\n\tfit: function(blocks) {\n\t\tvar n, node, block, len = blocks.length, fit;\n\t\tvar width  = len > 0 ? blocks[0].width : 0;\n\t\tvar height = len > 0 ? blocks[0].height : 0;\n\t\tthis.root = { x: 0, y: 0, width: width, height: height };\n\t\tfor (n = 0; n < len ; n++) {\n\t\t\tblock = blocks[n];\n\t\t\tif (node = this.findNode(this.root, block.width, block.height)) {\n\t\t\t\tfit = this.splitNode(node, block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfit = this.growNode(block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tfindNode: function(root, width, height) {\n\t\tif (root.used)\n\t\t\treturn this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n\t\telse if ((width <= root.width) && (height <= root.height))\n\t\t\treturn root;\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tsplitNode: function(node, width, height) {\n\t\tnode.used = true;\n\t\tnode.down  = { x: node.x,         y: node.y + height, width: node.width,         height: node.height - height };\n\t\tnode.right = { x: node.x + width, y: node.y,          width: node.width - width, height: height               };\n\t\treturn node;\n\t},\n\n\tgrowNode: function(width, height) {\n\t\tvar canGrowDown  = (width  <= this.root.width);\n\t\tvar canGrowRight = (height <= this.root.height);\n\n\t\tvar shouldGrowRight = canGrowRight && (this.root.height >= (this.root.width  + width )); // attempt to keep square-ish by growing right when height is much greater than width\n\t\tvar shouldGrowDown  = canGrowDown  && (this.root.width  >= (this.root.height + height)); // attempt to keep square-ish by growing down  when width  is much greater than height\n\n\t\tif (shouldGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (shouldGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse if (canGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (canGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse\n\t\t\treturn null; // need to ensure sensible root starting size to avoid this happening\n\t},\n\n\tgrowRight: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width + width,\n\t\t\theight: this.root.height,\n\t\t\tdown: this.root,\n\t\t\tright: { x: this.root.width, y: 0, width: width, height: this.root.height }\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tgrowDown: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width,\n\t\t\theight: this.root.height + height,\n\t\t\tdown:  { x: 0, y: this.root.height, width: this.root.width, height: height },\n\t\t\tright: this.root\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t}\n\n};\n\nmodule.exports = GrowingPacker;\n\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","export function loadImageFile(file: File): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    // load file as data url, then load as image\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      // load image\n      const image = new Image();\n\n      image.src = reader.result as string;\n\n      image.onload = function () {\n        resolve(image);\n      };\n\n      image.onerror = function () {\n        reject(new Error(`Failed to load \"${file.name}\"`));\n      };\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsDataURL(file);\n  });\n}\n\nexport function loadTextFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      resolve(reader.result as string);\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsText(file);\n  });\n}\n","import binPack from \"bin-pack\";\nimport { BoomSheetsAnimation, BoomSheetsFrame } from \"./boomsheets-animations\";\nimport { InputSheet } from \"./input-sheet\";\n\nconst padding = 1;\n\ntype FrameBin = {\n  overlayed: {\n    frame: BoomSheetsFrame;\n    offsetx: number;\n    offsety: number;\n  }[];\n  outFrame: BoomSheetsFrame;\n  width: number;\n  height: number;\n};\n\nfunction createBinsForFrames(frames: BoomSheetsFrame[]): FrameBin[] {\n  return frames.map((frame) => ({\n    overlayed: [\n      {\n        frame,\n        offsetx: 0,\n        offsety: 0,\n      },\n    ],\n    outFrame: {\n      x: 0,\n      y: 0,\n      w: frame.w,\n      h: frame.h,\n      originx: frame.originx,\n      originy: frame.originy,\n      flipx: false,\n      flipy: false,\n      duration: frame.duration,\n      points: frame.points,\n    },\n    width: 0,\n    height: 0,\n  }));\n}\n\nconst MIGRATIONS = {\n  HAND: function () {\n    // delete\n  },\n  HILT: function () {\n    // delete\n  },\n  CHARACTER_SWING: function (\n    inputSheet: InputSheet,\n    binMap: { [state: string]: FrameBin[] },\n    originalAnimation: BoomSheetsAnimation\n  ) {\n    const hiltAnimation = inputSheet.animations!.find(\n      (anim) => anim.state.toUpperCase() == \"HILT\"\n    );\n\n    if (hiltAnimation) {\n      const bins = createBinsForFrames(originalAnimation.frames);\n      let i = 1;\n\n      bins[0].outFrame.points = [];\n\n      for (const frame of hiltAnimation.frames) {\n        let bin = bins[i++];\n        const baseFrame = bin.overlayed[0].frame;\n        const hiltPoint = baseFrame.points.find(\n          (p) => p.label.toUpperCase() == \"HILT\"\n        ) ?? {\n          x: 0,\n          y: 0,\n        };\n\n        const offsetx = hiltPoint.x - baseFrame.originx;\n        const offsety = hiltPoint.y - baseFrame.originy;\n        bin.overlayed.push({ frame, offsetx, offsety });\n\n        const endPoint = frame.points.find(\n          (p) => p.label.toUpperCase() == \"ENDPOINT\"\n        );\n\n        bin.outFrame.points = [\n          {\n            label: \"ENDPOINT\",\n            x: hiltPoint.x - frame.originx + (endPoint?.x ?? 0),\n            y: hiltPoint.y - frame.originy + (endPoint?.y ?? 0),\n          },\n        ];\n      }\n\n      binMap[\"CHARACTER_SWING_HILT\"] = bins;\n    }\n\n    const handAnimation = inputSheet.animations!.find(\n      (anim) => anim.state.toUpperCase() == \"HAND\"\n    );\n\n    if (handAnimation) {\n      const bins = createBinsForFrames(originalAnimation.frames);\n      let i = 1;\n\n      bins[0].outFrame.points = [];\n\n      for (const frame of handAnimation.frames) {\n        let bin = bins[i++];\n        const baseFrame = bin.overlayed[0].frame;\n        const hiltPoint = baseFrame.points.find(\n          (p) => p.label.toUpperCase() == \"HILT\"\n        ) ?? {\n          x: 0,\n          y: 0,\n        };\n\n        bin.overlayed.push({\n          frame,\n          offsetx: hiltPoint.x - baseFrame.originx,\n          offsety: hiltPoint.y - baseFrame.originy,\n        });\n        bin.outFrame.points = [];\n\n        binMap[\"CHARACTER_SWING_HAND\"] = bins;\n      }\n    }\n  },\n};\n\nexport default function updateSheet(\n  canvas: HTMLCanvasElement,\n  inputSheet: InputSheet\n): BoomSheetsAnimation[] {\n  if (!inputSheet.animations || !inputSheet.image) {\n    return [];\n  }\n\n  const binMap: { [state: string]: FrameBin[] } = {};\n\n  // create bins for the animation\n  for (const animation of inputSheet.animations) {\n    const migrate = MIGRATIONS[animation.state.toUpperCase()];\n\n    if (migrate) {\n      migrate(inputSheet, binMap, animation);\n    } else {\n      binMap[animation.state] = createBinsForFrames(animation.frames);\n    }\n  }\n\n  // resolve outFrame sizes and origin\n  const bins: FrameBin[] = Object.values(binMap).flat();\n\n  for (const bin of bins) {\n    // resolve origin\n    const prevOriginX = bin.outFrame.originx;\n    const prevOriginY = bin.outFrame.originy;\n\n    for (const { frame, offsetx, offsety } of bin.overlayed) {\n      bin.outFrame.originx = Math.max(\n        bin.outFrame.originx,\n        frame.originx - offsetx\n      );\n      bin.outFrame.originy = Math.max(\n        bin.outFrame.originy,\n        frame.originy - offsety\n      );\n    }\n\n    // update points\n    const originShiftX = bin.outFrame.originx - prevOriginX;\n    const originShiftY = bin.outFrame.originy - prevOriginY;\n\n    for (const point of bin.outFrame.points) {\n      point.x -= originShiftX;\n      point.y -= originShiftY;\n    }\n\n    // resolve size\n    for (const { frame, offsetx, offsety } of bin.overlayed) {\n      bin.outFrame.w = Math.max(\n        bin.outFrame.w,\n        bin.outFrame.originx - frame.originx + frame.w + offsetx\n      );\n      bin.outFrame.h = Math.max(\n        bin.outFrame.h,\n        bin.outFrame.originy - frame.originy + frame.h + offsety\n      );\n    }\n\n    bin.width = bin.outFrame.w + padding * 2;\n    bin.height = bin.outFrame.h + padding * 2;\n  }\n\n  // pack\n  const packResult = binPack(bins);\n\n  // update outFrames and render\n  canvas.width = packResult.width;\n  canvas.height = packResult.height;\n\n  const ctx = canvas.getContext(\"2d\")!;\n\n  for (const item of packResult.items) {\n    const destX = item.x + padding;\n    const destY = item.y + padding;\n\n    const { outFrame } = item.item;\n    outFrame.x = destX;\n    outFrame.y = destY;\n\n    const image = inputSheet.image;\n\n    for (const { frame, offsetx, offsety } of item.item.overlayed) {\n      if (!image) {\n        continue;\n      }\n\n      const destX = outFrame.x + outFrame.originx - frame.originx + offsetx;\n      const destY = outFrame.y + outFrame.originy - frame.originy + offsety;\n\n      ctx.save();\n      ctx.translate(destX, destY);\n\n      if (frame.flipx) {\n        ctx.translate(frame.w, 0);\n        ctx.scale(-1, 1);\n      }\n\n      if (frame.flipy) {\n        ctx.translate(frame.h, 0);\n        ctx.scale(1, -1);\n      }\n\n      ctx.drawImage(\n        image,\n        frame.x,\n        frame.y,\n        frame.w,\n        frame.h,\n        0,\n        0,\n        frame.w,\n        frame.h\n      );\n\n      ctx.restore();\n    }\n  }\n\n  // generate animation from bin map\n  const animations: BoomSheetsAnimation[] = Object.entries(binMap).map(\n    ([state, bins]) => ({\n      state,\n      frames: bins.map((bin) => bin.outFrame),\n    })\n  );\n\n  return animations;\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","crypt","utf8","isBuffer","bin","md5","$cbdf17c3d09bc906$export$f0199846ca09d4f9","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","base64map","rotl","n","b","rotr","endian","constructor","Number","i","length","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","toString","join","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","replace","imod4","indexOf","pow","$75ce0cb6501c8271$var$charenc","stringToBytes","str","unescape","encodeURIComponent","bytesToString","decodeURIComponent","escape","charCodeAt","String","fromCharCode","$58805e71bbbc0b37$var$isBuffer","obj","readFloatLE","slice","_isBuffer","s","quote","single","substring","$fdfd340aa13d9aca$var$nonSpaceRegex","$fdfd340aa13d9aca$var$keyEndRegex","$fdfd340aa13d9aca$var$matchGRegexFrom","text","regex","index","lastIndex","exec","$fdfd340aa13d9aca$var$parseAttributes","line","lineNumber","match","attributes","key","eqIndex","valueStart","value","valueEnd","$fdfd340aa13d9aca$var$findClosingQuote","$fdfd340aa13d9aca$var$stringCharIsEscaped","escaped","$fdfd340aa13d9aca$var$serializeObject","name","object","options","quoteAllValues","m","Array","isArray","$7bcff58d1f5524c8$exports","$06f5eb59911c96c0$exports","$06f5eb59911c96c0$var$GrowingPacker","prototype","fit","blocks","node","block","len","width","height","root","x","y","findNode","splitNode","growNode","used","right","down","canGrowDown","canGrowRight","shouldGrowRight","shouldGrowDown","growRight","growDown","items","packer","inPlace","newItems","map","item","sort","ret","reduce","curr","max","$fd882af322e8eaf8$exports","$198de2760da31229$var$matchBin","binMap","frame","imageData","matchingBins","frames","w","h","data","every","$92177892b4efbc96$var$createBinsForFrames","overlayed","offsetx","offsety","outFrame","originx","originy","flipx","flipy","duration","points","message","encoding","Uint8Array","l","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","t","_blocksize","_digestsize","digestbytes","asBytes","asString","$92177892b4efbc96$var$MIGRATIONS","HAND","HILT","CHARACTER_SWING","inputSheet","originalAnimation","hiltAnimation","animations","find","anim","state","toUpperCase","bins","baseFrame","hiltPoint","p","label","endPoint","handAnimation","$b4e14b6b8da86996$var$inputSheet","$b4e14b6b8da86996$var$logError","error","console","alert","$b4e14b6b8da86996$var$loadFiles","files","file","endsWith","image","Promise","resolve","reject","reader","FileReader","onload","Image","src","result","onerror","readAsDataURL","imageError","undefined","readAsText","currentAnimation","currentFrame","split","trim","startsWith","animation","parseFloat","point","wordEnd","word","animationError","$b4e14b6b8da86996$var$gup","canvas","document","querySelector","textarea","offscreenCanvas","createElement","migrate","Object","values","flat","prevOriginX","prevOriginY","originShiftX","originShiftY","$92177892b4efbc96$var$padding","packResult","ctx","getContext","destX","destY","save","translate","scale","drawImage","restore","entries","destCanvas","sourceCanvas","sourceCtx","getImageData","matchingBin","flippedImageData","flippedI","$198de2760da31229$var$padding","lines","body","addEventListener","event","preventDefault","dataTransfer","getAsFile","catch","finally","errorElement","innerText","$b4e14b6b8da86996$var$resolveErrorMessage"],"version":3,"file":"index.9b671f25.js.map"}